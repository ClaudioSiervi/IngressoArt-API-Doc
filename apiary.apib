FORMAT: 1A
HOST: http://stage.api.ingresso.art.br/api/v1/

# Ingresso.Art

Documentação da API Ingresso.Art

# Data Structures

## User (object)
+ id
+ nome
+ email
+ password
+ remember_token
+ tipo_documento
+ documento
+ telefone
+ banco
+ agencia
+ conta
+ api_key
+ ativo
+ admin
+ produtor
+ data_nascimento

## Evento (object)
+ id (number)
+ nome (string)
+ descricao (string)
+ data (string)
+ hora (string)
+ local (string)
+ genero (string)
+ cidade (string)
+ estado (string)
+ ativo (boolean)
+ deleted_at
+ created_at
+ updated_at
+ user_id (string)
+ gratuito (string)
+ privado (string)
+ identificador (string)

# Group Website

## Banner [/banners]
### Lista todos os banners [GET]
+ Response 200 (application/json)

### Busca banner por ID [GET /banners/{id}]
+ Parameters
    + id (string)

+ Response 200 (application/json)

## Evento [/eventos]

### Lista todos os eventos [GET]
+ Response 200 (application/json)
    + Attributes (array[Evento])

### Busca evento por ID [GET /eventos/{id}]
+ Parameters
    + id (string)
+ Response 200 (application/json)
    + Attributes (Evento)

### Lista imagens de um evento [GET /eventos/{id}/imagens]
+ Parameters
    + id (string)
+ Response 200 (application/json)

### Busca imagem de um evento por ID [GET /eventos/{id}/imagens/{id_imagem}]
+ Parameters
    + id (string)
    + id_imagem (string)
+ Response 200 (application/json)

### Lista lotes de um evento [GET /eventos/{id}/lotes]
+ Parameters
    + id (string)
+ Response 200 (application/json)

### Busca lote de um evento por ID [GET /eventos/{id}/lotes/{id_lote}]
+ Parameters
    + id (string)
    + id_lote (string)
+ Response 200 (application/json)

## Usuário [/users/{id}]
+ Parameters
    + id (string)

### Busca usuário por ID [GET]
+ Response 200 (application/json)
    + Attributes (User)

### Cria um usuário [POST /users]
+ Response 200 (application/json)
    + Attributes (User)

### Atualiza um usuário [PUT]
+ Response 200 (application/json)
    + Attributes (User)

### Deleta um usuário [DELETE]
+ Response 200 (application/json)

## Endereço [/users/{user_id}/enderecos]
+ Parameters
    + user_id (string)

### Lista endereços de um usuário [GET]
+ Response 200 (application/json)

### Lista endereço por ID [GET /users/{user_id}/enderecos/{id}]
+ Parameters
    + user_id (string)
    + id (string)

+ Response 200 (application/json)

### Cria um endereço [POST]
+ Response 200 (application/json)

### Atualiza um endereço [PUT /users/{user_id}/enderecos/{id}]
+ Parameters
    + user_id (string)
    + id (string)

+ Response 200 (application/json)

### Deleta endereço [DELETE /users/{user_id}/enderecos/{id}]
+ Parameters
    + user_id (string)
    + id (string)

+ Response 200 (application/json)




## Públicas [/]

### Cria um usuário [POST /create]

+ Request (application/json)

        {
            "nome":"Luciana Lima",
            "email": "luciana@ingresso.art.br",
            "password":"123123",
            "tipo_documento":"CPF",
            "documento":"06212660948",
            "telefone":"96004955",
            "data_nascimento":"04/04/1988"
        }
        
+ Response 200 (application/json)
    + Attributes (User)

### Ativa usuário [POST /ativar/{token}]

+ Parameters
    + token (string)

+ Response 200 (application/json)

### Login [POST /login]

+ Response 200 (application/json)

### Recupera Token [GET /user/token/{token}]

+ Parameters
    + token (string)

+ Response 200 (application/json)

### Reseta Senha [POST /password_reset]

+ Response 200 (application/json)

### Atualiza Senha [POST /password_update/{token}]

+ Response 200 (application/json)




## Pedido [/pedido/]
### Lista todos os pedidos do usuário[GET]
+ Response 200 (application/json)

### Lista um pedido [GET /pedido/{id}]
+ Parameters
    + id (string)

+ Response 200 (application/json)

### Cria novo pedido [POST]
+ Response 200 (application/json)

### Cria novo lote no pedido [POST /pedido/lote]
+ Response 200 (application/json)

### Atualiza um pedido [PUT /pedido/{id}]
+ Parameters
    + id (string)

+ Response 200 (application/json)

### Deleta um pedido [DELETE /pedido/{id}]
+ Parameters
    + id (string)

+ Response 200 (application/json)

### Lista ingressos no pedido [GET /pedido/{id}/ingresso]
+ Parameters
    + id (string)

+ Response 200 (application/json)

### Detalhes do ingresso [GET /ingresso/{id}]
+ Parameters
    + id (string)

+ Response 200 (application/json)


## PagSeguro [/pagseguro]

### Checkout do pedido [GET /pagseguro/pedido/{id}/checkout]
+ Parameters
    + id (string)

+ Response 200 (application/json)
    
### Notificações [POST /pagseguro/notifications]
+ Response 200 (application/json)

### Relatório transações abandonadas [GET /pagseguro/report/abandonada]
+ Response 200 (application/json)

### Relatório histórico [GET /pagseguro/report/historico]
+ Response 200 (application/json)


# Group Admin

Rotas com prefixo /admin

## Evento [/admin/evento/{id}]
+ Parameters
    + id (string)

### Lista todos os eventos [GET /admin/evento/]
+ Response 200 (application/json)
    + Attributes (array[Evento])

### Lista um evento [GET]
+ Parameters
    + id (string)

+ Response 200 (application/json)

### Atualiza um evento [PUT]
+ Parameters
    + id (string)

+ Response 200 (application/json)

# Group Produtor

Rotas com prefixo /produtor

## Produtor [/produtor]

# Group Aplicativo

Rotas com prefixo /aplicativo

## Aplicativo [/aplicativo]